
[Config Example4]
description = "Recording PCAP Traces"
network = Network

# adding default routes in all hosts
*.configurator.config = xml("<config> \
								<interface hosts='**' address='10.x.x.x' netmask='255.x.x.x'/> \
                                <route hosts='ethHost*' destination='*' netmask='0.0.0.0' interface='eth0' /> \
                             </config>")

*.configurator.addStaticRoutes = false

# RIP parameters on routers
*.router*.hasRip = true
*.router1.rip.startupTime = 0s
*.router2.rip.startupTime = 1ms
*.router*.rip.updateInterval = 2s

# traffic settings
*.host1.numApps = 1
*.host1.app[0].typename = "UdpBasicApp"
*.host1.app[0].destAddresses = "host2"
*.host1.app[0].destPort = 1000
*.host1.app[0].localPort = 1000
*.host1.app[0].messageLength = 1000Byte
*.host1.app[0].startTime = 5s
*.host1.app[0].sendInterval = 2ms

*.host2.numApps = 1
*.host2.app[0].typename = "UdpSink"
*.host2.app[0].localPort = 1000

*.ethHost1.numApps = 2
*.ethHost1.app[0].typename = "PingApp"
*.ethHost1.app[0].destAddr = "ethHost2"
*.ethHost1.app[0].startTime = 3s
*.ethHost1.app[0].sendInterval = 1s
*.ethHost1.app[1].typename = "TcpSessionApp"
*.ethHost1.app[1].dataTransferMode = "bytestream"
*.ethHost1.app[1].connectAddress = "ethHost2"
*.ethHost1.app[1].tOpen = 5s
*.ethHost1.app[1].tSend = 5s

*.ethHost2.numApps = 1
*.ethHost2.app[0].typename = "TcpSinkApp"

# misc settings
**.crcMode = "computed"
**.fcsMode = "computed"
*.host*.wlan[*].bitrate = 54Mbps

# pcap recorder settings
*.host1.numPcapRecorders = 1
*.host1.pcapRecorder[0].moduleNamePatterns = "wlan[*]"
*.host1.pcapRecorder[0].pcapNetwork = 105		# 802.11
*.host1.pcapRecorder[0].pcapFile = "results/host1.pcap"

*.host2.numPcapRecorders = 1
*.host2.pcapRecorder[0].moduleNamePatterns = "wlan[*]"
*.host2.pcapRecorder[0].pcapNetwork = 105		# 802.11
*.host2.pcapRecorder[0].pcapFile = "results/host2.pcap"

*.ethHost1.numPcapRecorders = 1
*.ethHost1.pcapRecorder[0].moduleNamePatterns = "eth[*]"
*.ethHost1.pcapRecorder[0].pcapNetwork = 1		# ethernet
*.ethHost1.pcapRecorder[0].pcapFile = "results/ethHost1.pcap"

*.ethHost2.numPcapRecorders = 1
*.ethHost2.pcapRecorder[0].moduleNamePatterns = "eth[*]"
*.ethHost2.pcapRecorder[0].pcapNetwork = 1   	# ethernet
*.ethHost2.pcapRecorder[0].pcapFile = "results/ethHost2.pcap"

*.router1.numPcapRecorders = 2
*.router1.pcapRecorder[0].moduleNamePatterns = "ppp[*]"
*.router1.pcapRecorder[0].pcapNetwork = 204		# ppp
*.router1.pcapRecorder[0].pcapFile = "results/router1.ppp.pcap"
*.router1.pcapRecorder[1].moduleNamePatterns = "eth[*]"
*.router1.pcapRecorder[1].pcapNetwork = 1		# ethernet
*.router1.pcapRecorder[1].pcapFile = "results/router1.eth.pcap"

*.router2.numPcapRecorders = 2
*.router2.pcapRecorder[0].moduleNamePatterns = "eth[*]"
*.router2.pcapRecorder[0].pcapNetwork = 1		# ethernet
*.router2.pcapRecorder[0].pcapFile = "results/router2.eth.pcap"
*.router2.pcapRecorder[1].moduleNamePatterns = "ppp[*]"
*.router2.pcapRecorder[1].pcapNetwork = 204		# ppp
*.router2.pcapRecorder[1].pcapFile = "results/router2.ppp.pcap"

**.pcapRecorder[*].verbose = true	# is this needed? doesnt seem to work ok
**.pcapRecorder[*].alwaysFlush = true

# visualizer settings
*.visualizer.interfaceTableVisualizer.displayInterfaceTables = true
*.visualizer.dataLinkVisualizer.displayLinks = true
