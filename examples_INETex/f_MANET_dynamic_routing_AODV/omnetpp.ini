
[Config Step0]
description = "Static routing when nodes are fixed"
network = Network

# Configurator settings
*.configurator.config = xml("<config> \
								<interface hosts='**' address='10.x.x.x' netmask='255.x.x.x' /> \
								<autoroute metric='errorRate' /> \
                             </config>")

*.configurator.addDirectRoutes = false

# Application parameters
*.source.numApps = 1
*.source.app[0].typename = "PingApp"
*.source.app[0].destAddr = "destination"

*.*.ipv4.arp.typename = "GlobalArp"

# wlan parameters
*.*.wlan[*].radio.transmitter.power = 2mW
*.*.wlan[*].bitrate = 54Mbps

# Visualizer parameters
*.visualizer.mediumVisualizer.displayCommunicationRanges = true
*.visualizer.mediumVisualizer.nodeFilter = "source or destination"

*.visualizer.routingTableVisualizer.displayRoutingTables = true
*.visualizer.routingTableVisualizer.displayLabels = false
*.visualizer.routingTableVisualizer.lineShiftMode = "none"
*.visualizer.routingTableVisualizer.destinationFilter = "*"

*.visualizer.interfaceTableVisualizer.displayInterfaceTables = true

# PING request and reply messages
*.visualizer.networkRouteVisualizer.displayRoutes = true
*.visualizer.networkRouteVisualizer.packetFilter = "ping*"

# ---------------------------------------------------------------

[Config Step1]
description = "Dynamic routing with AODV when nodes are fixed"
network = Network2

*.configurator.addStaticRoutes = false

# Application parameters
*.source.numApps = 1
*.source.app[0].typename = "PingApp"
*.source.app[0].destAddr = "destination"

*.*.ipv4.arp.typename = "GlobalArp"

# wlan parameters
*.*.wlan[*].radio.transmitter.power = 2mW

# AODV RREQ
*.rreqVisualizer.*.displayLinks = true
*.rreqVisualizer.*.packetFilter = "aodv::Rreq"
*.rreqVisualizer.*.fadeOutMode = "simulationTime"
*.rreqVisualizer.*.fadeOutTime = 0.002s

# AODV RREP
*.rrepVisualizer.*.displayLinks = true
*.rrepVisualizer.*.packetFilter = "aodv::Rrep"
*.rrepVisualizer.*.fadeOutMode = "simulationTime"
*.rrepVisualizer.*.fadeOutTime = 5s
*.rrepVisualizer.*.lineColor = "blue"
*.rrepVisualizer.*.labelColor = "blue"

# AODV RERR
*.rerrVisualizer.*.displayLinks = true
*.rerrVisualizer.*.packetFilter = "aodv::Rerr"
*.rerrVisualizer.*.fadeOutMode = "simulationTime"
*.rerrVisualizer.*.fadeOutTime = 0.002s
*.rerrVisualizer.*.lineColor = "red"
*.rerrVisualizer.*.labelColor = "red"

# PING request and reply messages
*.visualizer.networkRouteVisualizer.displayRoutes = true
*.visualizer.networkRouteVisualizer.packetFilter = "ping*"

*.visualizer.interfaceTableVisualizer.displayInterfaceTables = true

# ---------------------------------------------------------------

[Config Step2]
description = "Routes Created by AODV"
extends = Step1

*.*.aodv.ttlStart = 4

# ---------------------------------------------------------------

[Config Step3]
description = "Expunging an Active Route"
extends = Step1

*.*.aodv.ttlStart = 4

*.source.numApps = 2

*.source.app[0].typename = "PingApp"
*.source.app[0].destAddr = "destination"
*.source.app[0].count = 1

*.source.app[1].typename = "PingApp"
*.source.app[1].destAddr = "destination"
*.source.app[1].count = 1
*.source.app[1].startTime = 25s

# ---------------------------------------------------------------

[Config Step4]
description = "RREP Generation by an Intermediate Node"
extends = Step1

*.*.aodv.ttlStart = 4

*.source.numApps = 1
*.source.app[0].typename = "PingApp"
*.source.app[0].destAddr = "destination"
*.source.app[0].count = 1

*.aodvRouter3.numApps = 1
*.aodvRouter3.app[0].typename = "PingApp"
*.aodvRouter3.app[0].destAddr = "destination"
*.aodvRouter3.app[0].count = 1
*.aodvRouter3.app[0].startTime = 2s

# decrease the fadeout time of RREP messages
*.rrepVisualizer.*.fadeOutTime = 0.002s

# ---------------------------------------------------------------

[Config Step4b]
description = "Prevent RREP Generation by an Intermediate Node"
extends = Step4

*.*.aodv.destinationOnlyFlag = true

# ---------------------------------------------------------------

[Config Step5]
description = "Gratuitous RREP"
extends = Step4

*.*.aodv.askGratuitousRREP = true

# ---------------------------------------------------------------

[Config Step6]
description = "Wireless Link Breakage and Hello messages"
extends = Step1

*.*.aodv.ttlStart = 4

*.*.aodv.useHelloMessages = true

*.source.numApps = 1
*.source.app[0].typename = "PingApp"
*.source.app[0].destAddr = "destination"
*.source.app[0].count = 1

*.**.hasStatus = true
*.scenarioManager.script = xml("<scenario> \
							    <at t='25.0'> \
							        <crash module='destination' /> \
							    </at> \
							    <at t='30.0'> \
							        <startup module='destination' /> \
							    </at> \
                             </scenario>")

# decrease the fadeout time of RREP messages
*.rrepVisualizer.*.fadeOutTime = 0.002s

# ---------------------------------------------------------------

[Config Step7]
description = "Precursor List"
extends = Step1

*.*.aodv.ttlStart = 4

*.source.numApps = 1
*.source.app[0].typename = "PingApp"
*.source.app[0].destAddr = "destination"
*.source.app[0].count = 1

*.aodvRouter3.numApps = 1
*.aodvRouter3.app[0].typename = "PingApp"
*.aodvRouter3.app[0].destAddr = "destination"
*.aodvRouter3.app[0].count = 1
*.aodvRouter3.app[0].startTime = 2s

# ---------------------------------------------------------------

[Config Step8]
description = "Route Error"
extends = Step7

# pinging when destination is down
*.aodvRouter3.numApps = 2
*.aodvRouter3.app[1].typename = "PingApp"
*.aodvRouter3.app[1].destAddr = "destination"
*.aodvRouter3.app[1].count = 1
*.aodvRouter3.app[1].startTime = 3s

*.**.hasStatus = true
*.scenarioManager.script = xml("<scenario> \
							    <at t='3.0'> \
							        <crash module='destination' /> \
							    </at> \
							    <at t='80.0'> \
							        <startup module='destination' /> \
							    </at> \
                             </scenario>")

# ---------------------------------------------------------------

[Config Step9]
description = "Loop Prevention"
extends = Step1








#[Config Step8a]
#description = "assymetric wireless link (less than optimal routes)"
#extends = Step2
#
#*.*.aodv.ttlStart = 4
#
## wlan parameters
#*.destination.wlan[*].radio.transmitter.power = 10mW
#
## ---------------------------------------------------------------
#
#[Config Step8b]
#description = assymetric wireless links (route discovery fail)
#extends = Step2
#network = Network3
#
#*.*.aodv.ttlStart = 4
#
## wlan parameters
#*.aodvRouter1.wlan[*].radio.transmitter.power = 1mW
#*.aodvRouter2.wlan[*].radio.transmitter.power = 1mW
#*.aodvRouter3.wlan[*].radio.transmitter.power = 1mW
#*.visualizer.mediumVisualizer.displayCommunicationRanges = true
#
## ---------------------------------------------------------------






#[Config Step8aa]
#description = "assymetric wireless link - less than optimal routes"
#extends = Step2
#
#*.*.aodv.ttlStart = 4
#
## wlan parameters
#*.aodvRouter1.wlan[*].radio.transmitter.power = 1mW
#*.visualizer.mediumVisualizer.displayCommunicationRanges = true
#
#
#
#[Config Step8aaa]
#description = assymetric wireless link - less than optimal routes
#extends = Step2
#network = Network3
#
#*.*.aodv.ttlStart = 4
#
## wlan parameters
#*.aodvRouter1.wlan[*].radio.transmitter.power = 1mW
#*.aodvRouter2.wlan[*].radio.transmitter.power = 1mW
#*.aodvRouter3.wlan[*].radio.transmitter.power = 1mW
#*.visualizer.mediumVisualizer.displayCommunicationRanges = true
#
#
#
#
#
#
#[Config Step8bb]
#description = "assymetric wireless link - route discovery fail"
#extends = Step2
#
#*.*.aodv.ttlStart = 4
#
## wlan parameters
#*.source.wlan[*].radio.transmitter.power = 10mW

# ---------------------------------------------------------------

[Config Step19]
description = "two different paths!"
network = Network2


# ---------------------------------------------------------------

[Config Step20]
description = "Mobile nodes"
extends = Step2

# Mobility parameters
*.*.mobility.typename = "MassMobility"
*.*.mobility.speed = 8mps
*.*.mobility.changeAngleBy = uniform(-60deg, 60deg)
*.*.mobility.changeInterval = exponential(1s)

